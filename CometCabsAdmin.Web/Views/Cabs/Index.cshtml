@model CometCabsAdmin.Web.Models.CabViewModel

@{
    ViewBag.Title = "Manage Cabs";
    List<SelectListItem> status = new List<SelectListItem>();
    status.Add(new SelectListItem { Text = "On Duty", Value = "on-duty" });
    status.Add(new SelectListItem { Text = "Off Duty", Value = "off-duty" });
    status.Add(new SelectListItem { Text = "Inactive", Value = "inactive" });
}
<div class="hidden" id="cabTable">
    @Html.Raw(Json.Encode(Model.CabTable))
</div>
<div class="hidden" id="status">
    @Html.Raw(Json.Encode(status))
</div>


<h2>@ViewBag.Title</h2>
<div id="scope" ng-controller="CabController">
    <div class="row">
        <div class="col-md-1">
            <ul class="nav nav-pills" style="width: 100px;">
                <li role="presentation">
                    <a href="javascript:void(0)" ng-click="addCab()">Add Cab</a>
                </li>
            </ul>
        </div>
        <div class="col-md-8" style="padding-left: 0px;">
            <div class="panel panel-default">
                <!-- Default panel contents -->
                <div class="panel-heading">List of Cabs</div>
                <div class="panel-body">
                    <table class="table table-striped table-hover table-condensed">
                        <thead>
                            <tr>
                                <th>
                                    No.
                                </th>
                                <th>
                                    Cab Code
                                </th>
                                <th>
                                    Max Capacity
                                </th>
                                <th>
                                    Status
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr ng-repeat="cab in cabTable">
                                <td class="pointer" ng-click="editCab(cab)">{{ $index + 1 }}</td>
                                <td class="pointer" ng-click="editCab(cab)">{{ cab.CabCode }}</td>
                                <td class="pointer" ng-click="editCab(cab)">{{ cab.MaxCapacity }}</td>
                                <td class="pointer" ng-click="editCab(cab)">{{ cab.Status }}</td>
                                <td class="icon glyphicon glyphicon-trash" ng-click="deleteCab(cab)" title="Delete cab"></td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="panel panel-default" ng-show="editMode">
                <!-- Default panel contents -->
                <div class="panel-heading"></div>
                <div class="panel-body">
                    <div id="status-caption" class="alert alert-danger" style="top: 70px; position: absolute; display: none;">{{ $scope.errorMessage }}</div>
                    <form class="form-horizontal" method="post">
                        @Html.ValidationSummary()
                        @Html.HiddenFor(model => model.Id)
                        <div class="form-group">
                            @Html.LabelFor(model => model.CabCode, new { @class = "col-sm-3 control-label" })
                            <div class="col-sm-4">
                                <input type="text" class="form-control" ng-model="cabCode" />
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.CabDesc, new { @class = "col-sm-3 control-label" })
                            <div class="col-sm-4">
                                <textarea class="form-control" ng-model="cabDesc"></textarea>
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.MaxCapacity, new { @class = "col-sm-3 control-label" })
                            <div class="col-sm-4">
                                <input type="number" class="form-control" ng-model="maxCapacity" />
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.OnDutyStatus, new { @class = "col-sm-3 control-label" })
                            <div class="col-sm-4">
                                <select ng-model="selectedStatus" ng-options="item.Text for item in status">
                                    <option value="">-- select cab status --</option>
                                </select>
                            </div>
                        </div>
                            <div class="col-sm-offset-3 col-sm-2">
                            <button type="button" ng-click="saveCab()">Save</button>
                            <button type="reset" ng-click="discardChanges()">Cancel</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-3">
    </div>
</div>

@section ViewScripts{
    <script type="text/ng-template" id="delete-dialog">
        <div class="ngdialog-message">
            <h3>Delete Cab</h3>
            <p>Cab <span style="font-weight: bold;">{{ cabSelected.cabCode }}</span> will be removed permanently.</p>
            <p>Are you sure you want to do this?</p>
        </div>
        <div class="ngdialog-buttons">
            <button type="button" class="ngdialog-button ngdialog-button-primary" ng-click="confirm()">Confirm</button>
            <button type="button" class="ngdialog-button ngdialog-button-secondary" ng-click="closeThisDialog()">Cancel</button>
        </div>
    </script>
    <script type="text/javascript">
        (function (angular) {
            'use strict';
            var app = angular.module('CometCabs', ['ngRoute', 'ngDialog']);

            app.config(['ngDialogProvider', function (ngDialogProvider) {
                ngDialogProvider.setDefaults({
                    className: 'ngdialog-theme-default',
                    plain: false,
                    showClose: true,
                    closeByDocument: true,
                    closeByEscape: true,
                    appendTo: false,
                    preCloseCallback: function () {
                        console.log('default pre-close callback');
                    }
                });
            }]);

            // TODO: add user
            // TODO: edit user
            // TODO: delete user

            app.controller('CabController', ['$scope', '$http', '$route', '$timeout', 'ngDialog', function ($scope, $http, $route, $timeout, ngDialog) {
                $scope.cabTable = JSON.parse($('#cabTable').html());
                $scope.status = JSON.parse($('#status').html());
                $scope.id = 0;
                $scope.editMode = false;
                $scope.cabCode = '';
                $scope.cabDesc = '';
                $scope.maxCapacity = 0;
                $scope.selectedStatus = '';

                $scope.saveCab = function () {
                    var cab = {
                        id: $scope.id,
                        cabCode: $scope.cabCode,
                        cabDesc: $scope.cabDesc,
                        maxCapacity: $scope.maxCapacity,
                        onDutyStatus: JSON.stringify($scope.selectedStatus),
                    }

                    $http({ method: 'POST', url: '/Cabs/SaveCab', contentType: 'application/json', data: cab })
                        .success(function (data) {
                            // resetMap();
                            if (data === '') {
                                location.href = '/Cabs/Index'
                            } else {
                                $timeout(function () {
                                    angular.element('#status-caption').fadeToggle(1000);
                                }, 5000);
                            }
                        })
                        .error(function (data, status, headers, config) {
                            // called asynchronously if an error occurs
                            // or server returns response with an error status.
                            console.log(data + ' ' + status + ' ' + headers + ' ' + config)
                        });
                };

                $scope.discardChanges = function () {
                    clearForm()
                };

                $scope.addCab = function () {
                    $scope.editMode = true;
                };

                $scope.editCab = function (cab) {  
                    $scope.editMode = true;
                    $scope.id = eval(cab.Id);
                    $scope.cabCode = cab.CabCode;
                    $scope.cabDesc = cab.CabDesc;
                    $scope.maxCapacity = eval(cab.MaxCapacity);
                    $scope.selectedStatus = cab.Status;
                };

                $scope.deleteCab = function (cab) {
                    ngDialog.openConfirm({
                        template: 'delete-dialog',
                        className: 'ngdialog-theme-default',
                        scope: $scope
                    }).then(function () {
                        $http({ method: 'POST', url: '/Cabs/DeleteCab', contentType: 'application/json', data: cab })//route) })
                            .success(function (data) {
                                location.href = '/Cabs/'
                            })
                            .error(function (data, status, headers, config) {
                                // called asynchronously if an error occurs
                                // or server returns response with an error status.
                                alert(data + ' ' + status + ' ' + headers + ' ' + config)
                            }
                        );
                    }, function () {

                    });
                }
                function clearForm() {
                    $scope.editMode = false;
                    $scope.cabCode = '';
                    $scope.cabDesc = '';
                    $scope.maxCapacity = 0;
                    $scope.selectedStatus = '';
                }
            }]);
        })(window.angular);
    </script>
}